# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
do_not_include_H_from_C 
i18n_type 1 
i18n_include "i18n.h" 
i18n_function _ 
header_name {.h} 
code_name {.cxx}
declblock {\#ifdef HAVE_CONFIG_H} {open after {\#endif}
} {
  decl {\#include <config.h>} {}
} 

decl {\#include "wizard.h"} {} 

decl {\#include <string>} {public
} 

decl {\#include <iostream>} {public
} 

decl {\#include <FL/Fl_Preferences.H>} {public
} 

decl {\#include <FL/Fl_Pixmap.H>} {public
} 

decl {\#include <OpenThreads/Thread>} {public
} 

decl {\#include "folder_open.xpm"} {} 

decl {class LogWindow;} {public
} 

decl {class Advanced;} {public
} 

class Wizard {open
} {
  class FlightGearThread {: {public OpenThreads::Thread}
  } {
    decl {FlightGearThread( Wizard *w );} {public
    }
    decl {void run();} {public
    }
    decl {Wizard *wizard;} {}
    decl {FlightGearThread();} {}
    decl {FlightGearThread( const FlightGearThread &);} {}
    decl {FlightGearThread &operator=( const FlightGearThread &);} {}
  }
  class TerraSyncThread {: {public OpenThreads::Thread}
  } {
    decl {TerraSyncThread( Wizard *w );} {public
    }
    decl {void run();} {public
    }
    decl {Wizard *wizard;} {}
    decl {TerraSyncThread();} {}
    decl {TerraSyncThread( const TerraSyncThread & );} {}
    decl {TerraSyncThread &operator=( const TerraSyncThread & );} {}
  }
  Function {Wizard() : prefs( Fl_Preferences::USER, "flightgear.org", "fgrun" ), logwin(0), folder_open_pixmap(folder_open_xpm), adv(0), fgThread(0), tsThread(0), fgPid(0), tsPid(0)} {open
  } {
    Fl_Window win {
      label {FlightGear Wizard} open
      private xywh {579 307 800 600} type Double visible
    } {
      Fl_Wizard wiz {open
        private xywh {0 0 800 560}
        code0 {win->resizable( wiz );}
      } {
        Fl_Group {page[0]} {
          label {Select Paths}
          xywh {0 0 800 560} labelfont 1 align 21 hide
        } {
          Fl_Help_View about_ {
            private xywh {5 25 790 130} labeltype NO_LABEL
          }
          Fl_Input fg_exe_ {
            label {Executable:}
            callback {fg_exe_update_cb();}
            private tooltip {Full pathname to FlightGear executable} xywh {130 175 495 25} labelsize 12 when 8 textsize 12
          }
          Fl_Button {} {
            callback {fg_exe_select_cb();}
            private tooltip {Full pathname to FlightGear executable} xywh {630 175 25 25} labelsize 12
            code0 {o->image(folder_open_pixmap);}
          }
          Fl_Input fg_root_ {
            label {FG_ROOT:}
            callback {fg_root_update_cb();}
            private tooltip {root data path} xywh {130 205 495 25} labelsize 12 when 1 textsize 12
          }
          Fl_Button {} {
            callback {fg_root_select_cb();}
            private tooltip {root data path} xywh {630 205 25 25} labelsize 12
            code0 {o->image(folder_open_pixmap);}
          }
          Fl_Browser scenery_dir_list_ {
            label {FG_SCENERY:}
            callback {scenery_dir_select_cb();}
            private tooltip {Scenery directories} xywh {130 275 495 185} type Hold labelsize 12 align 4 textsize 12 resizable
          }
          Fl_Group {} {open
            xywh {630 275 25 90}
          } {
            Fl_Button scenery_dir_up_ {
              label {@8>}
              callback {scenery_dir_up_cb();}
              private xywh {630 340 25 25} deactivate
            }
            Fl_Box {} {
              xywh {630 275 25 65} resizable
            }
          }
          Fl_Group {} {open
            xywh {630 365 25 95}
          } {
            Fl_Button scenery_dir_down_ {
              label {@2>}
              callback {scenery_dir_down_cb();}
              private xywh {630 370 25 25} deactivate
            }
            Fl_Box {} {
              xywh {630 395 25 65} resizable
            }
          }
          Fl_Button cache_delete_ {
            label Delete
            callback {delete_cache_file_cb();}
            private tooltip {Clear the content of the airport cache} xywh {630 490 60 25} labelsize 12 deactivate
          }
          Fl_Output cache_file_ {
            label {Airports Cache:}
            private tooltip {Full path to the airport cache} xywh {130 490 495 25} labelsize 12 textsize 12
          }
          Fl_Group {} {open
            xywh {130 245 495 25}
          } {
            Fl_Button {} {
              label {Add...}
              callback {scenery_dir_add_cb();}
              private tooltip {Add a scenery directory} xywh {130 245 60 25} labelsize 12
            }
            Fl_Button scenery_dir_delete_ {
              label Delete
              callback {scenery_dir_delete_cb();}
              private tooltip {Delete a scenery directory} xywh {195 245 60 25} labelsize 12 deactivate
            }
            Fl_Box {} {
              xywh {260 245 50 25} resizable
            }
            Fl_Spinner ts_dir {
              label {TerraSync directory}
              callback {ts_dir_cb()}
              tooltip {Select the line in the FG_SCENERY list that is the TerraSync directory. 0 means that TerraSync is not used.} xywh {580 245 45 25} labelsize 12 textsize 12
            }
          }
        }
        Fl_Group {page[1]} {
          label {Select an aircraft}
          private xywh {0 0 800 560} labelfont 1 align 21 hide
        } {
          Fl_Tile {} {open
            xywh {0 20 795 500} resizable
          } {
            Fl_Browser aircraft {
              callback {preview_aircraft();}
              private xywh {5 20 200 500} type Hold labelsize 12 align 1 textsize 12
            }
            Fl_Box preview {
              label Preview
              private xywh {205 20 590 500} box THIN_DOWN_BOX labelsize 12
              code0 {\#include "Fl_OSG.h"}
              class Fl_OSG
            }
            Fl_Box {} {
              xywh {80 190 265 65} hide resizable
            }
          }
          Fl_Group {} {open
            xywh {5 520 790 35} box DOWN_BOX
          } {
            Fl_Output aircraft_status {
              label {Status :}
              xywh {115 525 135 25}
            }
            Fl_Output aircraft_author {
              label {Author(s) :}
              xywh {385 525 405 25} resizable
            }
          }
        }
        Fl_Group {page[2]} {
          label {Select a location} open
          private xywh {0 0 800 560} labelfont 1 align 21
        } {
          Fl_Box airports_ {
            private xywh {5 25 790 475} resizable
            code0 {\#include "AirportBrowser.h"}
            class AirportBrowser
          }
          Fl_Group {} {open
            xywh {5 505 790 50}
          } {
            Fl_Group carrier_group {
              label {Carrier Ops} open
              xywh {5 505 635 50} box ENGRAVED_FRAME labelfont 1 align 21 resizable
            } {
              Fl_Input carrier_ {
                label {Carrier : }
                xywh {145 520 175 25}
              }
              Fl_Input parkpos_ {
                label {Park pos :}
                tooltip {Only valid if carrier is set. For airport parking, use the list above.} xywh {460 520 175 25}
              }
              Fl_Box {} {
                xywh {640 505 0 5} resizable
              }
            }
            Fl_Button {} {
              label {Scenery Prefetch}
              callback {scenery_prefetch_cb();} selected
              xywh {645 505 150 50} labelsize 12
            }
          }
        }
        Fl_Group {page[3]} {
          private xywh {0 0 800 560} hide
        } {
          Fl_Group {} {
            private xywh {0 525 800 25}
          } {
            Fl_Button {} {
              label {Advanced...}
              callback {advanced_cb();}
              private xywh {685 525 110 25}
            }
            Fl_Box {} {
              private xywh {250 525 435 25} resizable
            }
            Fl_Check_Button show_cmd_line {
              label {Show command line}
              callback {show_cmd_line_cb();}
              private xywh {10 525 240 25} down_box DOWN_BOX
            }
          }
          Fl_Text_Display text {
            private xywh {5 370 790 145} box THIN_DOWN_BOX align 4 hide
          }
          Fl_Group {} {
            label Display open
            private xywh {5 5 790 110} box ENGRAVED_FRAME labelfont 1 align 21
          } {
            Fl_Choice resolution {
              label {Resolution :}
              callback {resolution_cb();}
              private tooltip {Window geometry, WxH} xywh {100 30 125 25} down_box BORDER_BOX
            } {
              MenuItem {} {
                label 800x600
                private xywh {0 0 100 20}
              }
              MenuItem {} {
                label 1024x768
                private xywh {0 0 100 20}
              }
              MenuItem {} {
                label 1280x1024
                private xywh {0 0 100 20}
              }
              MenuItem {} {
                label 1600x1200
                private xywh {0 0 100 20}
              }
              MenuItem {} {
                label 1280x800
                private xywh {0 0 100 20}
              }
              MenuItem {} {
                label 1680x1050
                private xywh {0 0 100 20}
              }
              MenuItem {} {
                label 1920x1200
                private xywh {0 0 100 20}
              }
            }
            Fl_Check_Button game_mode {
              label {Full Screen}
              callback {game_mode_cb();}
              private xywh {25 85 210 25} down_box DOWN_BOX
            }
            Fl_Check_Button horizon_effect {
              label {Horizon effect}
              callback {horizon_effect_cb();}
              private xywh {250 10 205 25} down_box DOWN_BOX
            }
            Fl_Check_Button enhanced_lighting {
              label {Enhanced runway lighting}
              callback {enhanced_lighting_cb();}
              private tooltip {Use with caution. It may drop your framerate dramatically} xywh {250 35 205 25} down_box DOWN_BOX
            }
            Fl_Check_Button specular_highlight {
              label {Specular highlight}
              callback {specular_highlight_cb();}
              private xywh {250 60 205 25} down_box DOWN_BOX
            }
            Fl_Check_Button frame_rate_limiter {
              label {Framerate limiter :}
              callback {frame_rate_limiter_cb();}
              private tooltip {Too much framerate hurts the smoothness of the simulation} xywh {250 85 205 25} down_box DOWN_BOX
            }
            Fl_Value_Input frame_rate_limiter_value {
              callback {frame_rate_limiter_value_cb();}
              private xywh {455 85 55 25} minimum 30 maximum 100 step 1
            }
            Fl_Box {} {
              private xywh {610 80 25 10} resizable
            }
            Fl_Check_Button clouds_3d {
              label {3D clouds (experimental)}
              callback {clouds_3d_cb();}
              private xywh {470 10 205 25} down_box DOWN_BOX
            }
            Fl_Choice bpp {
              label {bpp :}
              callback {bpp_cb();} open
              tooltip {Color depth (bits per pixel)} xywh {100 55 125 25} down_box BORDER_BOX
            } {
              MenuItem {} {
                label 32
                xywh {0 0 100 20}
              }
              MenuItem {} {
                label 24
                xywh {0 0 100 20}
              }
              MenuItem {} {
                label 16
                xywh {0 0 100 20}
              }
            }
          }
          Fl_Group {} {open
            xywh {5 120 790 180}
          } {
            Fl_Group {} {
              label Features
              private xywh {5 120 480 180} box ENGRAVED_FRAME labelfont 1 align 21
            } {
              Fl_Check_Button random_objects {
                label {Random objects}
                callback {random_objects_cb();}
                private xywh {25 135 150 25} down_box DOWN_BOX
              }
              Fl_Check_Button random_trees {
                label {Random trees}
                callback {random_trees_cb();}
                private xywh {25 160 150 25} down_box DOWN_BOX
              }
              Fl_Check_Button ai_models {
                label {AI models}
                callback {ai_models_cb();}
                private xywh {25 185 150 25} down_box DOWN_BOX
              }
              Fl_Check_Button time_of_day {
                label {Time of day :}
                callback {time_of_day_cb();}
                private xywh {180 135 160 25} down_box DOWN_BOX
              }
              Fl_Choice time_of_day_value {
                callback {time_of_day_value_cb();} open
                private xywh {345 135 120 25} down_box BORDER_BOX
              } {}
              Fl_Check_Button real_weather_fetch {
                label {Real weather fetch}
                callback {real_weather_fetch_cb();}
                private xywh {180 185 160 25} down_box DOWN_BOX
              }
              Fl_Check_Button auto_coordination {
                label {Auto-coordination}
                callback {auto_coordination_cb();}
                private xywh {180 210 170 25} down_box DOWN_BOX
              }
              Fl_Choice season {
                label {Season :}
                callback {season_cb();} open
                private xywh {345 160 120 25} down_box BORDER_BOX
              } {}
              Fl_Box {} {
                private xywh {445 205 20 10} resizable
              }
            }
            Fl_Group {} {
              label Scenarios
              xywh {490 120 305 139} box ENGRAVED_FRAME labelfont 1 align 21 resizable
            } {
              Fl_Browser scenarii {
                callback {scenarii_cb();}
                private xywh {495 136 295 116} type Multi align 5 resizable
              }
            }
            Fl_Group {} {open
              xywh {490 265 305 35} box ENGRAVED_FRAME labelfont 1 align 21
            } {
              Fl_Check_Button terrasync {
                label TerraSync
                callback {terrasync_cb();}
                xywh {495 270 100 25} down_box DOWN_BOX labelfont 1
              }
              Fl_Value_Input terrasync_port {
                callback {terrasync_port_cb();}
                xywh {595 270 50 25}
              }
              Fl_Box {} {
                xywh {680 270 45 25} resizable
              }
            }
          }
          Fl_Group {} {open
            private xywh {5 305 790 60}
          } {
            Fl_Group atlas_group {open
              private xywh {5 305 245 60} box ENGRAVED_FRAME labeltype SHADOW_LABEL labelfont 1 align 21
            } {
              Fl_Check_Button atlas {
                label Atlas
                callback {atlas_cb();}
                private xywh {10 310 70 25} down_box DOWN_BOX labelfont 1
              }
              Fl_Input atlas_host {
                label {Hostname :}
                callback {atlas_host_cb();}
                private tooltip Hostname xywh {95 335 85 25} when 1 resizable
              }
              Fl_Value_Input atlas_port {
                label {:}
                callback {atlas_port_cb();}
                private xywh {190 335 50 25}
              }
            }
            Fl_Group multiplay_group {open
              private xywh {255 305 540 60} box ENGRAVED_FRAME resizable
            } {
              Fl_Check_Button multiplay {
                label Multiplayer
                callback {multiplay_cb();}
                private xywh {260 310 130 25} down_box DOWN_BOX labelfont 1
              }
              Fl_Input multiplay_callsign {
                label {Callsign :}
                callback {multiplay_field_cb();}
                private xywh {545 310 170 25} when 1
              }
              Fl_Input multiplay_host {
                label {Hostname :}
                callback {multiplay_field_cb();}
                private tooltip {Peer hostname} xywh {355 335 120 25} when 1
              }
              Fl_Value_Input multiplay_in {
                label {in :}
                callback {multiplay_field_cb();}
                private tooltip {Input port number} xywh {545 335 50 25}
              }
              Fl_Value_Input multiplay_out {
                label {out :}
                callback {multiplay_field_cb();}
                private tooltip {Output port number} xywh {665 335 50 25}
              }
              Fl_Box {} {
                private xywh {625 305 10 0} resizable
              }
            }
          }
          Fl_Box {} {
            private xywh {245 370 280 145} resizable
          }
        }
        Fl_Group {page[4]} {
          xywh {0 0 800 560} hide deactivate
        } {}
      }
      Fl_Group {} {open
        xywh {0 570 800 25}
      } {
        Fl_Button prev {
          label Prev
          callback {prev_cb();}
          private xywh {575 570 70 25} labelsize 12
        }
        Fl_Button next {
          label Next
          callback {next_cb();}
          private xywh {650 570 70 25} labelsize 12
        }
        Fl_Button cancel {
          label Quit
          callback {cancel_cb();}
          private xywh {725 570 70 25} labelsize 12
        }
        Fl_Box {} {
          xywh {380 570 195 25} resizable
        }
        Fl_Button defaults {
          label Defaults
          callback {defaults_cb();}
          tooltip {Clear all selected options and return to the install situation. Useful if FGFS don't start anymore.} xywh {5 570 125 25} labelsize 12
        }
        Fl_Button {} {
          label {Save As...}
          callback {save_preferences_cb();}
          tooltip {Save current configuration to a file} xywh {260 570 120 25} labelsize 12
        }
        Fl_Button {} {
          label Load
          callback {load_preferences_cb();}
          tooltip {Load a previously saved configuration} xywh {135 570 120 25} labelsize 12
        }
      }
    }
  }
  decl {~Wizard();} {public
  }
  decl {void show();} {public
  }
  decl {void show( int argc, char* argv[] );} {public
  }
  decl {void init( bool fullscreen );} {public
  }
  decl {void update_preview();} {public
  }
  decl {void preview_aircraft();} {public
  }
  decl {void reset();} {}
  decl {void aircraft_update();} {}
  decl {void aircraft_update( const char *aft );} {}
  decl {void next_cb();} {}
  decl {void prev_cb();} {}
  decl {void defaults_cb();} {}
  decl {void advanced_options_cb();} {}
  decl {void fg_exe_update_cb();} {}
  decl {void fg_exe_select_cb();} {}
  decl {void fg_root_update_cb();} {}
  decl {void fg_root_select_cb();} {}
  decl {void advanced_cb();} {}
  decl {int write_fgfsrc();} {}
  decl {static int write_fgfsrc( Fl_Preferences &prefs, std::ostream&, const char* pfx = "\\n");} {}
  decl {int run_fgfs( const std::string & );} {}
  decl {int run_ts();} {}
  decl {static void stdout_cb( int, void* );} {}
  decl {void stdout_cb( int );} {}
  decl {void cancel_cb();} {}
  decl {void delete_cache_file_cb();} {}
  decl {static void airports_cb( Fl_Widget*, void* )} {}
  decl {void airports_cb();} {}
  decl {void update_scenery_up_down();} {}
  decl {void scenery_dir_select_cb();} {}
  decl {void scenery_dir_add_cb();} {}
  decl {void scenery_dir_delete_cb();} {}
  decl {void scenery_dir_up_cb();} {}
  decl {void scenery_dir_down_cb();} {}
  decl {void ts_dir_cb();} {}
  decl {void refresh_airports();} {public
  }
  decl {static void refresh_airports( Fl_Widget*, void* );} {public
  }
  decl {Fl_Preferences prefs;} {}
  decl {LogWindow* logwin;} {}
  decl {Fl_Pixmap folder_open_pixmap} {}
  decl {void update_options();} {}
  decl {void resolution_cb();} {}
  decl {void bpp_cb();} {}
  decl {void game_mode_cb();} {}
  decl {void horizon_effect_cb();} {}
  decl {void enhanced_lighting_cb();} {}
  decl {void specular_highlight_cb();} {}
  decl {void frame_rate_limiter_cb();} {}
  decl {void frame_rate_limiter_value_cb();} {}
  decl {void clouds_3d_cb();} {}
  decl {void random_objects_cb();} {}
  decl {void random_trees_cb();} {}
  decl {void ai_models_cb();} {}
  decl {void time_of_day_cb();} {}
  decl {void time_of_day_value_cb();} {}
  decl {void season_cb();} {}
  decl {void real_weather_fetch_cb();} {}
  decl {void auto_coordination_cb();} {}
  decl {void scenarii_cb();} {}
  decl {void terrasync_cb();} {}
  decl {void terrasync_port_cb();} {}
  decl {void atlas_cb();} {}
  decl {void atlas_host_cb();} {}
  decl {void atlas_port_cb();} {}
  decl {void multiplay_cb();} {}
  decl {void multiplay_field_cb();} {}
  decl {void update_basic_options( Fl_Preferences &p );} {}
  decl {void save_basic_options( Fl_Preferences &p );} {}
  decl {void display_scenarii();} {}
  decl {void show_cmd_line_cb();} {}
  decl {void reset_settings();} {}
  decl {void load_preferences_cb();} {}
  decl {void save_preferences_cb();} {}
  Function {make_launch_window()} {open private
  } {
    Fl_Window launch_window {
      label {FlightGear running...} open
      private xywh {-32000 -32000 455 155} type Double hide
    } {
      Fl_Group {} {open
        private xywh {15 25 425 120}
      } {
        Fl_Box {} {
          label {FlightGear has been started}
          private xywh {15 25 425 25} labelfont 1 labelsize 18 align 128
        }
        Fl_Box {} {
          label {Please wait...}
          private xywh {15 50 425 25} labelfont 1
        }
        Fl_Box {} {
          label {To change aircraft, exit FlightGear and return to this launcher}
          private xywh {95 90 265 50} labelfont 1 align 128
        }
      }
    }
  }
  decl {int launch_result;} {}
  decl {void exec_launch_window();} {}
  decl {Advanced *adv;} {}
  decl {static Fl_Menu_Item menu_time_of_day_value[];} {}
  decl {static Fl_Menu_Item menu_season[];} {}
  Function {make_crash_window()} {open private
  } {
    Fl_Window crash_window {
      label {Flightgear crashed...} open
      private xywh {826 351 455 240} type Double visible
    } {
      Fl_Box {} {
        label {Flightgear encountered an unexpected failure}
        private xywh {5 15 445 25} labelfont 1 labelsize 18
      }
      Fl_Box {} {
        label {We are sorry for this inconvenience.}
        private xywh {5 40 445 25} labelfont 1
      }
      Fl_Box file_box {
        private xywh {5 90 445 55} align 148
      }
      Fl_Button {} {
        label OK
        callback {crash_ok_cb();}
        xywh {350 205 100 30} labelsize 12
      }
      Fl_Box {} {
        label {An error report has been generated in the file below :}
        xywh {5 65 445 25} labelsize 12 align 20
      }
      Fl_Box {} {
        label {Please send this error report to the Flightgear development team}
        xywh {5 145 445 50} labelsize 12 align 149
      }
    }
  }
  decl {void crash_ok_cb();} {}
  decl {void exec_crash_window( const char *fname );} {}
  decl {string dump_file_name;} {}
  decl {FlightGearThread *fgThread;} {}
  decl {TerraSyncThread *tsThread;} {}
  decl {friend class FlightGearThread;} {}
  decl {friend class TerraGearThread;} {}
  decl {long fgPid;} {}
  decl {long tsPid;} {}
  decl {void stopProcess( long pid );} {}
  Function {make_prefetch_window()} {open private
  } {
    Fl_Window prefetch_window {
      label {Prefetch Scenery} open
      xywh {668 245 350 130} type Double visible
    } {
      Fl_Group {} {open
        xywh {0 90 350 35}
      } {
        Fl_Button {} {
          label Cancel
          callback {prefetch_cancel_cb();}
          xywh {265 95 80 25} labelsize 12
        }
        Fl_Button {} {
          label OK
          callback {prefetch_ok_cb();}
          xywh {180 95 80 25}
        }
        Fl_Box {} {
          xywh {10 95 165 25} resizable
        }
      }
      Fl_Input prefetch_apt {
        label {Airport to fetch : }
        xywh {180 40 60 25}
      }
    }
  }
  decl {int prefetch_result;} {}
  decl {void scenery_prefetch_cb();} {}
  decl {bool exec_prefetch_window();} {}
  decl {void prefetch_ok_cb();} {}
  decl {void prefetch_cancel_cb();} {}
} 
